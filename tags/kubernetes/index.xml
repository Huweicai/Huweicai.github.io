<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Anonymous&#39; Blog</title>
    <link>https://huweicai.com/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Anonymous&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sat, 19 Feb 2022 11:00:00 +0800</lastBuildDate><atom:link href="https://huweicai.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cilium 容器数据路径</title>
      <link>https://huweicai.com/cilium-container-datapath/</link>
      <pubDate>Sat, 19 Feb 2022 11:00:00 +0800</pubDate>
      
      <guid>https://huweicai.com/cilium-container-datapath/</guid>
      <description>Cilium Cilium 提供了一套基于 eBPF 的容器网络方案，在网络可观测性和隔离策略方面提供了非常多强大的特性。 我们今天主要关注 Cilium 容器数据面路径这个话题，即一个使用 Cilium 做为 CNI 的 Pod 的数据是如何流动的。 这里我们以在 Pod 中向 1.1.1.1:80发起 TCP 连接（nc -v 1.1.1.1 80）的流量为例进行分析，演示的 Cilium 集群使用 veth pair 打通容器和宿主机网络命名空间，同时使用 vxlan 模式来进行跨主机间的 Pod 通信。 这里我们使用 Pod 10.1.128.86 进行演示，其所在 Node IP 为 10.11.224</description>
    </item>
    
    <item>
      <title>cilium配置详解</title>
      <link>https://huweicai.com/cilium-config/</link>
      <pubDate>Wed, 02 Feb 2022 02:26:00 +0800</pubDate>
      
      <guid>https://huweicai.com/cilium-config/</guid>
      <description>Cilium Cilium 可以说是当下最流行的基于 eBPF 的容器网络方案，基于eBPF 这种内核黑魔法 Cilium 极大地提升了容器网络的可玩性。 Cilium 的参数配置项都是通过 ConfigMapcilium-config配置的 中，，下面我们来一个个的分析一下这个 ConfigMap 里面的参数都有何意义。 本文基于cilium 1.11版本进行分析。 Cilium Config 配置项 意义 kvstore 当使用 KV 数据库存储元信息而不是CRD时，需要设置此项申明具体的KV存储，原来支持 etcd 和 consul 两种选择，不过 1.11 版</description>
    </item>
    
    <item>
      <title>Kubernetes权限管理概述</title>
      <link>https://huweicai.com/kubernetes-permissions-overview/</link>
      <pubDate>Thu, 18 Mar 2021 21:29:00 +0800</pubDate>
      
      <guid>https://huweicai.com/kubernetes-permissions-overview/</guid>
      <description>对于一个多用户系统而言，权限管理始终是无法忽略的一环，系统规模越大，权限管理就越重要。 以 Git 系统为例，你有一个代码仓库，你是这个仓库的管理员，你们组的同学具有提交代码的权限，你们部门的同学具有只读权限，公司的其他人全部无法查看，这就是一个典型的权限管理场景。 通常在校验权限中分为两个流程，认证和鉴权。 即先判断你是谁：认证，然后再鉴权，判断你有没有这个资源的权限。 毫无疑问，复杂的Kubernetes也具</description>
    </item>
    
    <item>
      <title>Kubectl基本概念&amp;常用命令</title>
      <link>https://huweicai.com/kubectl-concepts-and-commands/</link>
      <pubDate>Thu, 28 Jan 2021 15:01:00 +0800</pubDate>
      
      <guid>https://huweicai.com/kubectl-concepts-and-commands/</guid>
      <description>基本概念 容器化 + Kubernetes 逐渐成为云计算领域计算资源编排调度管理的事实标准，而 kubectl 则提供了一种非常直观和强大的观察操控 k8s集群的方式。 kubectl 是 kubernetes自带的 21 个命令行程序中的一个，其本身的逻辑并不复杂，使用 cobra 来解析命令行参数，读取 .kube/config中存储的认证信息经由 k8s restful api 和集群交互。 kubectl 命令基本格式如下： kubectl [子命令] [资源类型] [资源名称] [选项] 和 docker 、git这种复杂的命令行程序一样，kub</description>
    </item>
    
  </channel>
</rss>
