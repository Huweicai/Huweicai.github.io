<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ethernet on Anonymous&#39; Blog</title>
    <link>https://huweicai.com/tags/ethernet/</link>
    <description>Recent content in Ethernet on Anonymous&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    
	<atom:link href="https://huweicai.com/tags/ethernet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>完整网络请求包自底向上分析</title>
      <link>https://huweicai.com/who-network-capture-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://huweicai.com/who-network-capture-analysis/</guid>
      <description>现在我们发送了一个 HTTP 请求，我们都知道网络是分层的？HTTP 请求包发出的时候会一层一层往下叠加头部知道最终变成物理信号在网线上传输，那么最终的网络包到底是长什么样呢？我们今天就来实践探查一下。 先在服务器上起了一个简单的 HTTP 服务： python -m SimpleHTTPServer 8001 然后在客户端发起一个无参数的 GET 请求访问其根目录： curl -v http://110.89.228.110:8001 同时我们用 WireShark 抓包，完整的从网卡出去的一个包是长这样的一串二进制流：这串二进制流就是要在网线上传输的原始信号，如果</description>
    </item>
    
  </channel>
</rss>